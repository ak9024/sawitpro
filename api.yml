# This is the OpenAPI specification for your service. It is used to generate the client code.
# To generate the server code, use the Gradle task `openApiGenerate`. The 
# generated code will be placed in `build/generate-resources/main`.
#
# We will evaluate you based on how well you design your API.
# 1. How well it follows REST principles.
# 2. How easy it is to understand and use.
#
# References
# 1. https://swagger.io/specification/
openapi: "3.0.0"
info:
  version: 1.0.0
  title: Sawitpro
  license:
    name: MIT
servers:
  - url: http://localhost
paths:
  /estate:
      post:
        summary: Create a new estate
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstateRequest'
        responses:
          '200':
            description: Estate created successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EstateResponse'
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

  /estate/{id}/tree:
        post:
          summary: Create a tree data for estate
          parameters:
            - name: id
              in: path
              required: true
              schema:
                type: string
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EstateTreeRequest'
          responses:
            '200':
              description: Estate created successfully
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/EstateTreeResponse'
            '400':
              description: Bad request
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ErrorResponse'
  
  /estate/{id}/stats:
    get:
      summary: Get stats of estate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Estate stats successfully returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstateStatsResponse'
                
  /estate/{id}/drone-plan:
    get:
      summary: Get dron plan for the estate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Drone plan successfully returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstateDronePlanResponse'
components:
  schemas:
    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    
    EstateRequest:
      type: object
      required:
        - length
        - width
      properties:
        length:
          type: integer
          example: 10
        width:
          type: integer
          example: 10
    
    EstateResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          example: "ac69f4d6-a6c6-4547-b129-a3c3a6b05a0f"

    EstateTreeRequest:
      type: object
      required:
        - x
        - y
        - height
      properties:
        x:
          type: integer
          example: 10
        y:
          type: integer
          example: 10
        height:
          type: integer
          example: 30

    EstateTreeResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          example: "ac69f4d1-a6c2-4547-b129-a3c3a6b05a0f"
    
    EstateStatsResponse:
      type: object
      required:
        - count
        - max
        - min
        - median
      properties:
        count:
          type: integer
          example: 0
        max:
          type: integer
          example: 0
        min:
          type: integer
          example: 0
        median:
          type: integer
          example: 0
          
    EstateDronePlanResponse:
      type: object
      required:
        - distance
      properties:
        distance:
          type: integer
          example: 200
